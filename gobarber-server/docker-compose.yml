version: '3.8'

networks:
  gobarber-network:
    driver: bridge

services:
  gobarber-api:
    build: .
    container_name: gobarber-api
    volumes:
      - .:/home/node/api
      - /home/node/api/node_modules
    environment:
      - DB_HOST=gobarber-postgresql
      - MONGO_URL=gobarber-mongodb
      - REDIS_URL=gobarber-redis
    ports:
      - '3333:3333'
    depends_on:
      - gobarber-postgresql
      - gobarber-mongodb
      - gobarber-redis
    networks:
      - gobarber-network
    command: yarn dev:server

  gobarber-queue:
    build: .
    container_name: gobarber-queue
    volumes:
      - .:/home/node/api
      - /home/node/api/node_modules
    depends_on:
      - gobarber-redis
    networks:
      - gobarber-network
    command: yarn dev:queue

  gobarber-postgresql:
    image: bitnami/postgresql:latest
    container_name: gobarber-postgresql
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - POSTGRESQL_USERNAME=${POSGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASS}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DB}
    volumes:
      - gobarber-postgresql-data:/data
    networks:
      - gobarber-network

  gobarber-mongodb:
    image: bitnami/mongodb:latest
    container_name: gobarber-mongodb
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - MONGODB_USERNAME=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASS}
      - MONGODB_DATABASE=${MONGODB_DB}
    volumes:
      - gobarber-mongodb-data:/data
    networks:
      - gobarber-network

  gobarber-redis:
    image: bitnami/redis:latest
    container_name: gobarber-redis
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASS}
    volumes:
      - gobarber-redis-data:/data
    networks:
      - gobarber-network

volumes:
  gobarber-postgresql-data:
  gobarber-mongodb-data:
  gobarber-redis-data:
